/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as InterviewImport } from './routes/interview'
import { Route as CareersImport } from './routes/careers'
import { Route as TilIndexImport } from './routes/til/index'
import { Route as TilCategorySlugImport } from './routes/til/$category.$slug'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const InterviewRoute = InterviewImport.update({
  id: '/interview',
  path: '/interview',
  getParentRoute: () => rootRoute,
} as any)

const CareersRoute = CareersImport.update({
  id: '/careers',
  path: '/careers',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const TilIndexRoute = TilIndexImport.update({
  id: '/til/',
  path: '/til/',
  getParentRoute: () => rootRoute,
} as any)

const TilCategorySlugRoute = TilCategorySlugImport.update({
  id: '/til/$category/$slug',
  path: '/til/$category/$slug',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/careers': {
      id: '/careers'
      path: '/careers'
      fullPath: '/careers'
      preLoaderRoute: typeof CareersImport
      parentRoute: typeof rootRoute
    }
    '/interview': {
      id: '/interview'
      path: '/interview'
      fullPath: '/interview'
      preLoaderRoute: typeof InterviewImport
      parentRoute: typeof rootRoute
    }
    '/til/': {
      id: '/til/'
      path: '/til'
      fullPath: '/til'
      preLoaderRoute: typeof TilIndexImport
      parentRoute: typeof rootRoute
    }
    '/til/$category/$slug': {
      id: '/til/$category/$slug'
      path: '/til/$category/$slug'
      fullPath: '/til/$category/$slug'
      preLoaderRoute: typeof TilCategorySlugImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/careers': typeof CareersRoute
  '/interview': typeof InterviewRoute
  '/til': typeof TilIndexRoute
  '/til/$category/$slug': typeof TilCategorySlugRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/careers': typeof CareersRoute
  '/interview': typeof InterviewRoute
  '/til': typeof TilIndexRoute
  '/til/$category/$slug': typeof TilCategorySlugRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/careers': typeof CareersRoute
  '/interview': typeof InterviewRoute
  '/til/': typeof TilIndexRoute
  '/til/$category/$slug': typeof TilCategorySlugRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/careers' | '/interview' | '/til' | '/til/$category/$slug'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/careers' | '/interview' | '/til' | '/til/$category/$slug'
  id:
    | '__root__'
    | '/'
    | '/careers'
    | '/interview'
    | '/til/'
    | '/til/$category/$slug'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  CareersRoute: typeof CareersRoute
  InterviewRoute: typeof InterviewRoute
  TilIndexRoute: typeof TilIndexRoute
  TilCategorySlugRoute: typeof TilCategorySlugRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  CareersRoute: CareersRoute,
  InterviewRoute: InterviewRoute,
  TilIndexRoute: TilIndexRoute,
  TilCategorySlugRoute: TilCategorySlugRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/careers",
        "/interview",
        "/til/",
        "/til/$category/$slug"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/careers": {
      "filePath": "careers.tsx"
    },
    "/interview": {
      "filePath": "interview.tsx"
    },
    "/til/": {
      "filePath": "til/index.tsx"
    },
    "/til/$category/$slug": {
      "filePath": "til/$category.$slug.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
