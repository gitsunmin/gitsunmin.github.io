/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'
import { Route as LayoutInterviewImport } from './routes/_layout/interview'
import { Route as LayoutCareersImport } from './routes/_layout/careers'
import { Route as LayoutTilIndexImport } from './routes/_layout/til/index'
import { Route as LayoutProjectsIndexImport } from './routes/_layout/projects/index'
import { Route as LayoutProjectsMarketbomProImport } from './routes/_layout/projects/marketbom-pro'
import { Route as LayoutProjectsHybridAppIntegrationFrameworkWithFlutterImport } from './routes/_layout/projects/hybrid-app-integration-framework-with-flutter'
import { Route as LayoutProjectsFoodspringImport } from './routes/_layout/projects/foodspring'
import { Route as LayoutProjectsCoWorkingSolutionCnapsImport } from './routes/_layout/projects/co-working-solution-cnaps'
import { Route as LayoutTilCategorySlugImport } from './routes/_layout/til/$category.$slug'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const LayoutInterviewRoute = LayoutInterviewImport.update({
  id: '/interview',
  path: '/interview',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutCareersRoute = LayoutCareersImport.update({
  id: '/careers',
  path: '/careers',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutTilIndexRoute = LayoutTilIndexImport.update({
  id: '/til/',
  path: '/til/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutProjectsIndexRoute = LayoutProjectsIndexImport.update({
  id: '/projects/',
  path: '/projects/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutProjectsMarketbomProRoute = LayoutProjectsMarketbomProImport.update(
  {
    id: '/projects/marketbom-pro',
    path: '/projects/marketbom-pro',
    getParentRoute: () => LayoutRoute,
  } as any,
)

const LayoutProjectsHybridAppIntegrationFrameworkWithFlutterRoute =
  LayoutProjectsHybridAppIntegrationFrameworkWithFlutterImport.update({
    id: '/projects/hybrid-app-integration-framework-with-flutter',
    path: '/projects/hybrid-app-integration-framework-with-flutter',
    getParentRoute: () => LayoutRoute,
  } as any)

const LayoutProjectsFoodspringRoute = LayoutProjectsFoodspringImport.update({
  id: '/projects/foodspring',
  path: '/projects/foodspring',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutProjectsCoWorkingSolutionCnapsRoute =
  LayoutProjectsCoWorkingSolutionCnapsImport.update({
    id: '/projects/co-working-solution-cnaps',
    path: '/projects/co-working-solution-cnaps',
    getParentRoute: () => LayoutRoute,
  } as any)

const LayoutTilCategorySlugRoute = LayoutTilCategorySlugImport.update({
  id: '/til/$category/$slug',
  path: '/til/$category/$slug',
  getParentRoute: () => LayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/_layout/careers': {
      id: '/_layout/careers'
      path: '/careers'
      fullPath: '/careers'
      preLoaderRoute: typeof LayoutCareersImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/interview': {
      id: '/_layout/interview'
      path: '/interview'
      fullPath: '/interview'
      preLoaderRoute: typeof LayoutInterviewImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/projects/co-working-solution-cnaps': {
      id: '/_layout/projects/co-working-solution-cnaps'
      path: '/projects/co-working-solution-cnaps'
      fullPath: '/projects/co-working-solution-cnaps'
      preLoaderRoute: typeof LayoutProjectsCoWorkingSolutionCnapsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/projects/foodspring': {
      id: '/_layout/projects/foodspring'
      path: '/projects/foodspring'
      fullPath: '/projects/foodspring'
      preLoaderRoute: typeof LayoutProjectsFoodspringImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/projects/hybrid-app-integration-framework-with-flutter': {
      id: '/_layout/projects/hybrid-app-integration-framework-with-flutter'
      path: '/projects/hybrid-app-integration-framework-with-flutter'
      fullPath: '/projects/hybrid-app-integration-framework-with-flutter'
      preLoaderRoute: typeof LayoutProjectsHybridAppIntegrationFrameworkWithFlutterImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/projects/marketbom-pro': {
      id: '/_layout/projects/marketbom-pro'
      path: '/projects/marketbom-pro'
      fullPath: '/projects/marketbom-pro'
      preLoaderRoute: typeof LayoutProjectsMarketbomProImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/projects/': {
      id: '/_layout/projects/'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof LayoutProjectsIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/til/': {
      id: '/_layout/til/'
      path: '/til'
      fullPath: '/til'
      preLoaderRoute: typeof LayoutTilIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/til/$category/$slug': {
      id: '/_layout/til/$category/$slug'
      path: '/til/$category/$slug'
      fullPath: '/til/$category/$slug'
      preLoaderRoute: typeof LayoutTilCategorySlugImport
      parentRoute: typeof LayoutImport
    }
  }
}

// Create and export the route tree

interface LayoutRouteChildren {
  LayoutCareersRoute: typeof LayoutCareersRoute
  LayoutInterviewRoute: typeof LayoutInterviewRoute
  LayoutProjectsCoWorkingSolutionCnapsRoute: typeof LayoutProjectsCoWorkingSolutionCnapsRoute
  LayoutProjectsFoodspringRoute: typeof LayoutProjectsFoodspringRoute
  LayoutProjectsHybridAppIntegrationFrameworkWithFlutterRoute: typeof LayoutProjectsHybridAppIntegrationFrameworkWithFlutterRoute
  LayoutProjectsMarketbomProRoute: typeof LayoutProjectsMarketbomProRoute
  LayoutProjectsIndexRoute: typeof LayoutProjectsIndexRoute
  LayoutTilIndexRoute: typeof LayoutTilIndexRoute
  LayoutTilCategorySlugRoute: typeof LayoutTilCategorySlugRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutCareersRoute: LayoutCareersRoute,
  LayoutInterviewRoute: LayoutInterviewRoute,
  LayoutProjectsCoWorkingSolutionCnapsRoute:
    LayoutProjectsCoWorkingSolutionCnapsRoute,
  LayoutProjectsFoodspringRoute: LayoutProjectsFoodspringRoute,
  LayoutProjectsHybridAppIntegrationFrameworkWithFlutterRoute:
    LayoutProjectsHybridAppIntegrationFrameworkWithFlutterRoute,
  LayoutProjectsMarketbomProRoute: LayoutProjectsMarketbomProRoute,
  LayoutProjectsIndexRoute: LayoutProjectsIndexRoute,
  LayoutTilIndexRoute: LayoutTilIndexRoute,
  LayoutTilCategorySlugRoute: LayoutTilCategorySlugRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '': typeof LayoutRouteWithChildren
  '/careers': typeof LayoutCareersRoute
  '/interview': typeof LayoutInterviewRoute
  '/projects/co-working-solution-cnaps': typeof LayoutProjectsCoWorkingSolutionCnapsRoute
  '/projects/foodspring': typeof LayoutProjectsFoodspringRoute
  '/projects/hybrid-app-integration-framework-with-flutter': typeof LayoutProjectsHybridAppIntegrationFrameworkWithFlutterRoute
  '/projects/marketbom-pro': typeof LayoutProjectsMarketbomProRoute
  '/projects': typeof LayoutProjectsIndexRoute
  '/til': typeof LayoutTilIndexRoute
  '/til/$category/$slug': typeof LayoutTilCategorySlugRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '': typeof LayoutRouteWithChildren
  '/careers': typeof LayoutCareersRoute
  '/interview': typeof LayoutInterviewRoute
  '/projects/co-working-solution-cnaps': typeof LayoutProjectsCoWorkingSolutionCnapsRoute
  '/projects/foodspring': typeof LayoutProjectsFoodspringRoute
  '/projects/hybrid-app-integration-framework-with-flutter': typeof LayoutProjectsHybridAppIntegrationFrameworkWithFlutterRoute
  '/projects/marketbom-pro': typeof LayoutProjectsMarketbomProRoute
  '/projects': typeof LayoutProjectsIndexRoute
  '/til': typeof LayoutTilIndexRoute
  '/til/$category/$slug': typeof LayoutTilCategorySlugRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/_layout/careers': typeof LayoutCareersRoute
  '/_layout/interview': typeof LayoutInterviewRoute
  '/_layout/projects/co-working-solution-cnaps': typeof LayoutProjectsCoWorkingSolutionCnapsRoute
  '/_layout/projects/foodspring': typeof LayoutProjectsFoodspringRoute
  '/_layout/projects/hybrid-app-integration-framework-with-flutter': typeof LayoutProjectsHybridAppIntegrationFrameworkWithFlutterRoute
  '/_layout/projects/marketbom-pro': typeof LayoutProjectsMarketbomProRoute
  '/_layout/projects/': typeof LayoutProjectsIndexRoute
  '/_layout/til/': typeof LayoutTilIndexRoute
  '/_layout/til/$category/$slug': typeof LayoutTilCategorySlugRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/careers'
    | '/interview'
    | '/projects/co-working-solution-cnaps'
    | '/projects/foodspring'
    | '/projects/hybrid-app-integration-framework-with-flutter'
    | '/projects/marketbom-pro'
    | '/projects'
    | '/til'
    | '/til/$category/$slug'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/careers'
    | '/interview'
    | '/projects/co-working-solution-cnaps'
    | '/projects/foodspring'
    | '/projects/hybrid-app-integration-framework-with-flutter'
    | '/projects/marketbom-pro'
    | '/projects'
    | '/til'
    | '/til/$category/$slug'
  id:
    | '__root__'
    | '/'
    | '/_layout'
    | '/_layout/careers'
    | '/_layout/interview'
    | '/_layout/projects/co-working-solution-cnaps'
    | '/_layout/projects/foodspring'
    | '/_layout/projects/hybrid-app-integration-framework-with-flutter'
    | '/_layout/projects/marketbom-pro'
    | '/_layout/projects/'
    | '/_layout/til/'
    | '/_layout/til/$category/$slug'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  LayoutRoute: typeof LayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  LayoutRoute: LayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_layout"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/careers",
        "/_layout/interview",
        "/_layout/projects/co-working-solution-cnaps",
        "/_layout/projects/foodspring",
        "/_layout/projects/hybrid-app-integration-framework-with-flutter",
        "/_layout/projects/marketbom-pro",
        "/_layout/projects/",
        "/_layout/til/",
        "/_layout/til/$category/$slug"
      ]
    },
    "/_layout/careers": {
      "filePath": "_layout/careers.tsx",
      "parent": "/_layout"
    },
    "/_layout/interview": {
      "filePath": "_layout/interview.tsx",
      "parent": "/_layout"
    },
    "/_layout/projects/co-working-solution-cnaps": {
      "filePath": "_layout/projects/co-working-solution-cnaps.tsx",
      "parent": "/_layout"
    },
    "/_layout/projects/foodspring": {
      "filePath": "_layout/projects/foodspring.tsx",
      "parent": "/_layout"
    },
    "/_layout/projects/hybrid-app-integration-framework-with-flutter": {
      "filePath": "_layout/projects/hybrid-app-integration-framework-with-flutter.tsx",
      "parent": "/_layout"
    },
    "/_layout/projects/marketbom-pro": {
      "filePath": "_layout/projects/marketbom-pro.tsx",
      "parent": "/_layout"
    },
    "/_layout/projects/": {
      "filePath": "_layout/projects/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/til/": {
      "filePath": "_layout/til/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/til/$category/$slug": {
      "filePath": "_layout/til/$category.$slug.tsx",
      "parent": "/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
