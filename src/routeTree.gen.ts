/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'
import { Route as BooksImport } from './routes/_books'
import { Route as LayoutProjectsImport } from './routes/_layout.projects'
import { Route as LayoutInterviewImport } from './routes/_layout/interview'
import { Route as LayoutCareersImport } from './routes/_layout/careers'
import { Route as LayoutTilIndexImport } from './routes/_layout/til/index'
import { Route as BooksProjectsMarketbomProImport } from './routes/_books/projects/marketbom-pro'
import { Route as BooksProjectsHybridAppIntegrationFrameworkWithFlutterImport } from './routes/_books/projects/hybrid-app-integration-framework-with-flutter'
import { Route as BooksProjectsFoodspringImport } from './routes/_books/projects/foodspring'
import { Route as BooksProjectsCoWorkingSolutionCnapsImport } from './routes/_books/projects/co-working-solution-cnaps'
import { Route as LayoutTilCategorySlugImport } from './routes/_layout/til/$category.$slug'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const BooksRoute = BooksImport.update({
  id: '/_books',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const LayoutProjectsRoute = LayoutProjectsImport.update({
  id: '/projects',
  path: '/projects',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutInterviewRoute = LayoutInterviewImport.update({
  id: '/interview',
  path: '/interview',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutCareersRoute = LayoutCareersImport.update({
  id: '/careers',
  path: '/careers',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutTilIndexRoute = LayoutTilIndexImport.update({
  id: '/til/',
  path: '/til/',
  getParentRoute: () => LayoutRoute,
} as any)

const BooksProjectsMarketbomProRoute = BooksProjectsMarketbomProImport.update({
  id: '/projects/marketbom-pro',
  path: '/projects/marketbom-pro',
  getParentRoute: () => BooksRoute,
} as any)

const BooksProjectsHybridAppIntegrationFrameworkWithFlutterRoute =
  BooksProjectsHybridAppIntegrationFrameworkWithFlutterImport.update({
    id: '/projects/hybrid-app-integration-framework-with-flutter',
    path: '/projects/hybrid-app-integration-framework-with-flutter',
    getParentRoute: () => BooksRoute,
  } as any)

const BooksProjectsFoodspringRoute = BooksProjectsFoodspringImport.update({
  id: '/projects/foodspring',
  path: '/projects/foodspring',
  getParentRoute: () => BooksRoute,
} as any)

const BooksProjectsCoWorkingSolutionCnapsRoute =
  BooksProjectsCoWorkingSolutionCnapsImport.update({
    id: '/projects/co-working-solution-cnaps',
    path: '/projects/co-working-solution-cnaps',
    getParentRoute: () => BooksRoute,
  } as any)

const LayoutTilCategorySlugRoute = LayoutTilCategorySlugImport.update({
  id: '/til/$category/$slug',
  path: '/til/$category/$slug',
  getParentRoute: () => LayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/_books': {
      id: '/_books'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof BooksImport
      parentRoute: typeof rootRoute
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/_layout/careers': {
      id: '/_layout/careers'
      path: '/careers'
      fullPath: '/careers'
      preLoaderRoute: typeof LayoutCareersImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/interview': {
      id: '/_layout/interview'
      path: '/interview'
      fullPath: '/interview'
      preLoaderRoute: typeof LayoutInterviewImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/projects': {
      id: '/_layout/projects'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof LayoutProjectsImport
      parentRoute: typeof LayoutImport
    }
    '/_books/projects/co-working-solution-cnaps': {
      id: '/_books/projects/co-working-solution-cnaps'
      path: '/projects/co-working-solution-cnaps'
      fullPath: '/projects/co-working-solution-cnaps'
      preLoaderRoute: typeof BooksProjectsCoWorkingSolutionCnapsImport
      parentRoute: typeof BooksImport
    }
    '/_books/projects/foodspring': {
      id: '/_books/projects/foodspring'
      path: '/projects/foodspring'
      fullPath: '/projects/foodspring'
      preLoaderRoute: typeof BooksProjectsFoodspringImport
      parentRoute: typeof BooksImport
    }
    '/_books/projects/hybrid-app-integration-framework-with-flutter': {
      id: '/_books/projects/hybrid-app-integration-framework-with-flutter'
      path: '/projects/hybrid-app-integration-framework-with-flutter'
      fullPath: '/projects/hybrid-app-integration-framework-with-flutter'
      preLoaderRoute: typeof BooksProjectsHybridAppIntegrationFrameworkWithFlutterImport
      parentRoute: typeof BooksImport
    }
    '/_books/projects/marketbom-pro': {
      id: '/_books/projects/marketbom-pro'
      path: '/projects/marketbom-pro'
      fullPath: '/projects/marketbom-pro'
      preLoaderRoute: typeof BooksProjectsMarketbomProImport
      parentRoute: typeof BooksImport
    }
    '/_layout/til/': {
      id: '/_layout/til/'
      path: '/til'
      fullPath: '/til'
      preLoaderRoute: typeof LayoutTilIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/til/$category/$slug': {
      id: '/_layout/til/$category/$slug'
      path: '/til/$category/$slug'
      fullPath: '/til/$category/$slug'
      preLoaderRoute: typeof LayoutTilCategorySlugImport
      parentRoute: typeof LayoutImport
    }
  }
}

// Create and export the route tree

interface BooksRouteChildren {
  BooksProjectsCoWorkingSolutionCnapsRoute: typeof BooksProjectsCoWorkingSolutionCnapsRoute
  BooksProjectsFoodspringRoute: typeof BooksProjectsFoodspringRoute
  BooksProjectsHybridAppIntegrationFrameworkWithFlutterRoute: typeof BooksProjectsHybridAppIntegrationFrameworkWithFlutterRoute
  BooksProjectsMarketbomProRoute: typeof BooksProjectsMarketbomProRoute
}

const BooksRouteChildren: BooksRouteChildren = {
  BooksProjectsCoWorkingSolutionCnapsRoute:
    BooksProjectsCoWorkingSolutionCnapsRoute,
  BooksProjectsFoodspringRoute: BooksProjectsFoodspringRoute,
  BooksProjectsHybridAppIntegrationFrameworkWithFlutterRoute:
    BooksProjectsHybridAppIntegrationFrameworkWithFlutterRoute,
  BooksProjectsMarketbomProRoute: BooksProjectsMarketbomProRoute,
}

const BooksRouteWithChildren = BooksRoute._addFileChildren(BooksRouteChildren)

interface LayoutRouteChildren {
  LayoutCareersRoute: typeof LayoutCareersRoute
  LayoutInterviewRoute: typeof LayoutInterviewRoute
  LayoutProjectsRoute: typeof LayoutProjectsRoute
  LayoutTilIndexRoute: typeof LayoutTilIndexRoute
  LayoutTilCategorySlugRoute: typeof LayoutTilCategorySlugRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutCareersRoute: LayoutCareersRoute,
  LayoutInterviewRoute: LayoutInterviewRoute,
  LayoutProjectsRoute: LayoutProjectsRoute,
  LayoutTilIndexRoute: LayoutTilIndexRoute,
  LayoutTilCategorySlugRoute: LayoutTilCategorySlugRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '': typeof LayoutRouteWithChildren
  '/careers': typeof LayoutCareersRoute
  '/interview': typeof LayoutInterviewRoute
  '/projects': typeof LayoutProjectsRoute
  '/projects/co-working-solution-cnaps': typeof BooksProjectsCoWorkingSolutionCnapsRoute
  '/projects/foodspring': typeof BooksProjectsFoodspringRoute
  '/projects/hybrid-app-integration-framework-with-flutter': typeof BooksProjectsHybridAppIntegrationFrameworkWithFlutterRoute
  '/projects/marketbom-pro': typeof BooksProjectsMarketbomProRoute
  '/til': typeof LayoutTilIndexRoute
  '/til/$category/$slug': typeof LayoutTilCategorySlugRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '': typeof LayoutRouteWithChildren
  '/careers': typeof LayoutCareersRoute
  '/interview': typeof LayoutInterviewRoute
  '/projects': typeof LayoutProjectsRoute
  '/projects/co-working-solution-cnaps': typeof BooksProjectsCoWorkingSolutionCnapsRoute
  '/projects/foodspring': typeof BooksProjectsFoodspringRoute
  '/projects/hybrid-app-integration-framework-with-flutter': typeof BooksProjectsHybridAppIntegrationFrameworkWithFlutterRoute
  '/projects/marketbom-pro': typeof BooksProjectsMarketbomProRoute
  '/til': typeof LayoutTilIndexRoute
  '/til/$category/$slug': typeof LayoutTilCategorySlugRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/_books': typeof BooksRouteWithChildren
  '/_layout': typeof LayoutRouteWithChildren
  '/_layout/careers': typeof LayoutCareersRoute
  '/_layout/interview': typeof LayoutInterviewRoute
  '/_layout/projects': typeof LayoutProjectsRoute
  '/_books/projects/co-working-solution-cnaps': typeof BooksProjectsCoWorkingSolutionCnapsRoute
  '/_books/projects/foodspring': typeof BooksProjectsFoodspringRoute
  '/_books/projects/hybrid-app-integration-framework-with-flutter': typeof BooksProjectsHybridAppIntegrationFrameworkWithFlutterRoute
  '/_books/projects/marketbom-pro': typeof BooksProjectsMarketbomProRoute
  '/_layout/til/': typeof LayoutTilIndexRoute
  '/_layout/til/$category/$slug': typeof LayoutTilCategorySlugRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
  | '/'
  | ''
  | '/careers'
  | '/interview'
  | '/projects'
  | '/projects/co-working-solution-cnaps'
  | '/projects/foodspring'
  | '/projects/hybrid-app-integration-framework-with-flutter'
  | '/projects/marketbom-pro'
  | '/til'
  | '/til/$category/$slug'
  fileRoutesByTo: FileRoutesByTo
  to:
  | '/'
  | ''
  | '/careers'
  | '/interview'
  | '/projects'
  | '/projects/co-working-solution-cnaps'
  | '/projects/foodspring'
  | '/projects/hybrid-app-integration-framework-with-flutter'
  | '/projects/marketbom-pro'
  | '/til'
  | '/til/$category/$slug'
  id:
  | '__root__'
  | '/'
  | '/_books'
  | '/_layout'
  | '/_layout/careers'
  | '/_layout/interview'
  | '/_layout/projects'
  | '/_books/projects/co-working-solution-cnaps'
  | '/_books/projects/foodspring'
  | '/_books/projects/hybrid-app-integration-framework-with-flutter'
  | '/_books/projects/marketbom-pro'
  | '/_layout/til/'
  | '/_layout/til/$category/$slug'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  BooksRoute: typeof BooksRouteWithChildren
  LayoutRoute: typeof LayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  BooksRoute: BooksRouteWithChildren,
  LayoutRoute: LayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_books",
        "/_layout"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/_books": {
      "filePath": "_books.tsx",
      "children": [
        "/_books/projects/co-working-solution-cnaps",
        "/_books/projects/foodspring",
        "/_books/projects/hybrid-app-integration-framework-with-flutter",
        "/_books/projects/marketbom-pro"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/careers",
        "/_layout/interview",
        "/_layout/projects",
        "/_layout/til/",
        "/_layout/til/$category/$slug"
      ]
    },
    "/_layout/careers": {
      "filePath": "_layout/careers.tsx",
      "parent": "/_layout"
    },
    "/_layout/interview": {
      "filePath": "_layout/interview.tsx",
      "parent": "/_layout"
    },
    "/_layout/projects": {
      "filePath": "_layout.projects.tsx",
      "parent": "/_layout"
    },
    "/_books/projects/co-working-solution-cnaps": {
      "filePath": "_books/projects/co-working-solution-cnaps.tsx",
      "parent": "/_books"
    },
    "/_books/projects/foodspring": {
      "filePath": "_books/projects/foodspring.tsx",
      "parent": "/_books"
    },
    "/_books/projects/hybrid-app-integration-framework-with-flutter": {
      "filePath": "_books/projects/hybrid-app-integration-framework-with-flutter.tsx",
      "parent": "/_books"
    },
    "/_books/projects/marketbom-pro": {
      "filePath": "_books/projects/marketbom-pro.tsx",
      "parent": "/_books"
    },
    "/_layout/til/": {
      "filePath": "_layout/til/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/til/$category/$slug": {
      "filePath": "_layout/til/$category.$slug.tsx",
      "parent": "/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
